on:
  push:
    branches:
      - main

name: test-coverage

jobs:
  test-coverage:
    runs-on: ubuntu-20.04
    env:
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      CI_PASSWORD: ${{ secrets.CI_PASSWORD }}
      OS_NAME_STRING: ${{ matrix.config.os }}
      R_VERSION_STRING: ${{ matrix.config.r }}
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: "[Linux] Install system dependencies"
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: "[Linux] Install sen2r system dependencies"
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install \
            gdal-bin \
            aria2 \
            libpython2-dev \
            libudunits2-dev \
            libgdal-dev \
            libjq-dev \
            libprotobuf-dev \
            protobuf-compiler \
            libv8-dev \
            libssl-dev \
            libcairo2-dev
            
      - name: Install dependencies
        run: |
          install.packages(c("remotes"))
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("covr")
        shell: Rscript {0}

      - name: Test coverage
        run: |
          covr::codecov(
            line_exclusions = c(
              "R/s2_gui.R",
              "R/add_rgb_image.R",
              "R/give_write_permission.R",
              "R/check_sen2r_deps.R",
              "R/check_gui_deps.R",
              "R/create_indices_db.R", 
              "R/helpers_extent.R",
              "R/gdal_formats_db.R",
              "R/path_check.R", 
              "R/list_sen2r_paths.R",
              "R/check_param_list.R",
              "R/convert_datatype.R",
              "R/dontuse.R"
            )
          )

        shell: Rscript {0}
